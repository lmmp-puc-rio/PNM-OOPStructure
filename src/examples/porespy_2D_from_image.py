import numpy as np
import porespy as ps
import openpnm as op
import skimage.io as sc
import matplotlib.pyplot as plt
ps.visualization.set_mpl_style()
np.random.seed(10)
path = 'src/examples/results'
impath = 'data/images/EOR-D82 - Saphire Device/'
file = 'Combined Stacks_2_Cutted_ChanneledInlet.tif'

fig, ax = plt.subplots()
# Image generated by porespy blobs  
# im = ps.generators.blobs(shape=[400, 400], porosity=0.6, blobiness=2)

# Binary image from a real microfluidic device viewed in microscope
im = sc.imread(impath + file, as_gray=True);
ax.imshow(im)

r_max = 50
snow_output = ps.networks.snow2(im.T, voxel_size=1,r_max=r_max)

pn = op.io.network_from_porespy(snow_output.network)
print(pn)

op.visualization.plot_connections(pn, pn.throats() ,size_by=pn["throat.inscribed_diameter"], linewidth=5, alpha=0.8 , c='b' ,ax=fig)
op.visualization.plot_coordinates(pn, pn.pores(), size_by=pn["pore.inscribed_diameter"], markersize=r_max, c='b', ax=fig)
op.visualization.plot_coordinates(pn, pn['pore.xmin'], size_by=pn["pore.inscribed_diameter"], markersize=r_max, c='r', ax=fig)
op.visualization.plot_coordinates(pn, pn['pore.xmax'], size_by=pn["pore.inscribed_diameter"], markersize=r_max, c='k', ax=fig)
fig
ax.axis('off')
fig.tight_layout()
fig.savefig(path+'/'+'MicroPoreDevicePNM_rMax='+str(r_max)+'.png', dpi=300)
